name: Go Report

on: push

jobs:
  Go_Report_Card:

    name: Go Report Card
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/geektrust
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Go Report Card
        run: |
          issues_threshold=1
          gofmt_score_threshold=100
          go_vet_score_threshold=100
          gocyclo_score_threshold=10
          git clone https://github.com/gojp/goreportcard.git
          cd goreportcard
          make install
          go install ./cmd/goreportcard-cli
          cd ..
          rm -rf goreportcard
          goreportcard-cli | tee reportcard.txt
          files=$(cat reportcard.txt| grep 'Files ' | awk  '{print $3}' | tr -d \%)
          issues=$(cat reportcard.txt| grep 'Issues ' | awk  '{print $3}' | tr -d \%)
          gofmt_score=$(cat reportcard.txt| grep 'gofmt ' | awk  '{print $3}' | tr -d \%)
          go_vet_score=$(cat reportcard.txt| grep 'go_vet ' | awk  '{print $3}' | tr -d \%)
          gocyclo_score=$(cat reportcard.txt| grep 'gocyclo ' | awk  '{print $3}' | tr -d \%)
          rm reportcard.txt
          failed_checks=0
          failure_reason=""
          if [[ $issues -gt $issues_threshold ]]; then
            failure_reason="${failure_reason}\nIssues: $issues. Threshold was: $issues_threshold."
            ((failed_checks+=1))
          fi
          if [[ $gofmt_score -lt $gofmt_score_threshold ]]; then
            failure_reason="${failure_reason}\ngo-fmt score: $gofmt_score. Threshold was: $gofmt_score_threshold."
            ((failed_checks+=1))
          fi
          if [[ $go_vet_score -lt $go_vet_score_threshold ]]; then
            failure_reason="${failure_reason}\ngo-vet score: $go_vet_score. Threshold was: $go_vet_score_threshold."
            ((failed_checks+=1))
          fi
          if [[ $gocyclo_score -lt $gocyclo_score_threshold ]]; then
            failure_reason="${failure_reason}\ngo-cyclo score: $gocyclo_score. Threshold was: $gocyclo_score_threshold."
            ((failed_checks+=1))
          fi
          if [[ $failed_checks -gt 0 ]]; then
            goreportcard-cli -v
            printf "\n\n\n${failure_reason}\nFrom the above output, filter out issues in your touched files and fix them."
            exit 1
          else
            exit 0
          fi